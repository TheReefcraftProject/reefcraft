# Main project configuration and settings.
#
# The pyproject.toml is the recommended consolidated project-level configuration
# file. It replaces the older requirements.txt as well as many smaller files
# previously cluttering the root directory.

[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]
name = "reefcraft"
version = "0.1"
description = "Photorealistic Coral Simulations with Physically Based Accuracy"
readme = "README.md"
requires-python = ">=3.11,<=3.12"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[tool.hatch.build.targets.wheel]
packages = [ "src/reefcraft" ]

dependencies = [
  "attrs>=25.3.0",
  "cattrs>=24.1.3",
  "click>=8.1.8",
  "loguru>=0.7.3",
  "pip>=25.0.1",
  "pre-commit>=3.5.0",
  "pyproject-fmt>=2.2.4",
  "pytest>=8.3.5",
  "pytest-cov>=6.2.1",    # Coverage tracking for pytest
  "rich>=14.0.0",
  "ruff>=0.11.6",
  "dearpygui>=1.11.1",
  "wheel>=0.45.1",
]

[tool.ruff]
line-length = 160 # Allow longer source lines than the default 88 chars
exclude = [ "*ipynb", ".venv/**" ]
lint.select = [
  "A",   # flake8-builtins
  "ANN", # flake8-annotations
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # Pyflakes
  "FA",  # flake8-future-annotations
  "I",   # isort
  "PD",  # pandas-vet
  "PTH", # flake8-use-pathlib (PTH)
  "Q",   # flake8-quotes
  "SIM", # flake8-simplify
  "TC",  # flake8-type-checking
  "UP",  # pyupgrade
]
lint.per-file-ignores."!src/**.py" = [
  "D",    # Allow missing docstrings
  "E501", # Allow long lines
  "F401", # Allow unused import
]
lint.pydocstyle.convention = "google" # Support Google-style docstrings

[tool.pyproject-fmt]
keep_full_version = true

[tool.pytest.ini_options]
console_output_style = "count" # Show progress in fraction instead percent
addopts = [
  "--color=yes", # Enable color even in VSCode Testing panel
  "-r a",        # Show extra test summary for failed tests
  "--verbose",   # Show more details to speed up CI/CD debugging
]
testpaths = [
  "tests",
]

# Add coverage configuration for pytest and coverage tools

[tool.coverage.run]
branch = true            # Enable branch coverage analysis
source = [ "reefcraft" ]

[tool.coverage.report]
show_missing = true # Show missing lines in the coverage report
skip_covered = true # Skip covered files in the report

[tool.coverage.html]
directory = "coverage_html_report" # Specify the directory for HTML reports

# Codecov-specific configurations (for uploading coverage reports)

[tool.pyright]
ignore = [ "*ipynb" ]

[tool.codecov]
upload = true
coverage_report = "coverage.xml" # This points to the coverage report generated by pytest
